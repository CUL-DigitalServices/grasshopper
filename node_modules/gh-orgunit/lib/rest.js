/**
 * Copyright (c) 2014 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var GrassHopper = require('gh-core');

/**
 * @REST getOrgUnits
 *
 * Get the organisational units in the current app
 *
 * @Server      app
 * @Method      GET
 * @Path        /orgunit
 * @QueryParam  {boolean}           [includeSeries]     Whether to include the event series associated to the organisational units. Defaults to `false`
 * @QueryParam  {number}            [parent]            The id of the parent to retrieve the organisational units for
 * @QueryParam  {string[]}          [type]              The organisational unit type[s] to filter the organisational unit by
 * @Return      {OrgUnit[]}                             The organisational units in the current app
 */
GrassHopper.appServer.on('get', '/api/orgunit', function(req, res) {
    res.send(501);
});

/**
 * @REST getOrgUnitsByApp
 *
 * Get the organisational units in an app
 *
 * @Server      admin
 * @Method      GET
 * @Path        /orgunit/apps/{appId}
 * @PathParam   {number}            appId               The id of the app to get the organisational units for
 * @QueryParam  {boolean}           [includeSeries]     Whether to include the event series associated to the organisational units. Defaults to `false`
 * @QueryParam  {number}            [parent]            The id of the parent to retrieve the organisational units for
 * @QueryParam  {string[]}          [type]              The organisational unit type[s] to filter the organisational unit by
 * @Return      {OrgUnit[]}                             The organisational units in the app
 */
GrassHopper.globalAdminServer.on('get', '/api/orgunit/apps/:appId', function(req, res) {
    res.send(501);
});

/**
 * @REST getOrgUnit
 *
 * Get an organisational unit
 *
 * @Server      app
 * @Method      GET
 * @Path        /orgunit/:id
 * @PathParam   {number}            id                  The id of the organisational unit to retrieve
 * @QueryParam  {boolean}           [includeSeries]     Whether to include the event series associated to the organisational unit. Defaults to `false`
 * @Return      {OrgUnit}                               The requested organisational unit
 */
GrassHopper.appServer.on('get', '/api/orgunit/:id', function(req, res) {
    res.send(501);
});

/**
 * @REST createOrgUnit
 *
 * Create a new organisational unit
 *
 * @Server      admin, app
 * @Method      POST
 * @Path        /tenants/:tenantId/apps
 * @PathParam   {number}            tenantId        The id of the tenant on which to create the app
 * @FormParam   {string}            displayName     The name of the app (e.g. `Timetable 2013-14`)
 * @FormParam   {string}            host            The host on which the app can be found
 * @FormParam   {string}            type            The type of the app     [timetable]
 * @Return      {App}                               The created app
 */
GrassHopper.globalAdminServer.on('post', '/api/tenants/:tenantId/apps', function(req, res) {
    res.send(501);
});
