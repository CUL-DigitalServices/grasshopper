
var _ = require('lodash');
var oauth2orize = require('oauth2orize');
var passport = require('passport');
var util = require('util');

var log = require('gh-core/lib/logger').logger('gh-auth-oauth');

var AuthOauth = require('../oauth');
var AuthOauthDAO = require('./dao');

var server = oauth2orize.createServer();

server.exchange(oauth2orize.exchange.code({'userProperty': 'ghAuthInfo'}, function(ghAuthInfo, code, redirectUri, done) {
    if (_.isEmpty(ghAuthInfo) || _.isEmpty(ghAuthInfo.oauthClient)) {
        log().error({
            'err': {
                'code': 401,
                'msg': 'Not authorized to acquire an access token'
            }
        }, 'An error occurred attempting to authenticate to exchange an access token');
        return done(null, false, 'Not authorized to acquire an access token');
    }

    AuthOauth.exchangeAuthCode(ghAuthInfo.oauthClient, code, redirectUri, function(err, token) {
        if (err) {
            log().error({'err': err}, 'An error occurred attempting to exchange an access token');
            return done(null, false);
        }

        return done(null, token);
    });
}));

module.exports.token = [
    passport.authenticate(['basic', 'oauth2-client-password'], {'session': false}),
    server.token(),
    server.errorHandler()
];
