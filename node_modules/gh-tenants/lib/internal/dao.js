/**
 * Copyright (c) 2014 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var DB = require('gh-core/lib/db');
var log = require('gh-core/lib/logger').logger('gh-tenants');

/**
 * Get all tenants
 *
 * @param  {Function}       callback            Standard callback function
 * @param  {Object}         callback.err        An error object, if any
 * @param  {Tenants[]}      callback.tenants    All available tenants
 */
var getAllTenants = module.exports.getAllTenants = function(callback) {
    DB.Tenant.findAll().complete(function(err, tenants) {
        if (err) {
            log().error({'err': err}, 'Failed to get all tenants');
            return callback({'code': 500, 'msg': err.message});
        }

        return callback(null, tenants);
    });
};

/**
 * Get a tenant
 *
 * @param  {Number}         id                  The id of the tenant to retrieve
 * @param  {Function}       callback            Standard callback function
 * @param  {Object}         callback.err        An error object, if any
 * @param  {Tenant}         callback.tenant     The requested tenant
 */
var getTenant = module.exports.getTenant = function(id, callback) {
    DB.Tenant.find(id).complete(function(err, tenant) {
        if (err) {
            log().error({'err': err}, 'Failed to get a tenant');
            return callback({'code': 500, 'msg': err.message});
        } else if (!tenant) {
            log().error({'err': err}, 'A tenant with the specified id could not be found');
            return callback({'code': 404, 'msg': 'A tenant with the specified id could not be found'});
        }

        return callback(null, tenant);
    });
};

/**
 * Create a new tenant
 *
 * @param  {String}         displayName         The name of the tenant
 * @param  {Function}       callback            Standard callback function
 * @param  {Object}         callback.err        An error object, if any
 * @param  {Tenant}         callback.tenant     The created tenant
 */
var createTenant = module.exports.createTenant = function(displayName, callback) {
    var tenant = {
        'displayName': displayName
    };

    DB.Tenant.create(tenant).done(function(err, tenant) {
        if (err) {
            log().error({'err': err}, 'Failed to create a new tenant');
            return callback({'code': 500, 'msg': err.message});
        }

        log().debug({'tenant': tenant}, 'Created a new tenant');
        return callback(null, tenant);
    });
};

/**
 * Update a tenant
 *
 * @param  {Tenant}         tenant              The tenant to update
 * @param  {String}         displayName         Updated tenant name
 * @param  {Function}       callback            Standard callback function
 * @param  {Object}         callback.err        An error object, if any
 * @param  {Tenant}         callback.tenant     The updated tenant
 */
var updateTenant = module.exports.updateTenant = function(tenant, displayName, callback) {
    var update = {
        'displayName': displayName
    };

    tenant.updateAttributes(update).done(function(err, tenant) {
        if (err) {
            log().error({'err': err}, 'Failed to create a new tenant');
            return callback({'code': 500, 'msg': err.message});
        }

        log().debug({'tenant': tenant, 'update': update}, 'Updated a tenant');
        return callback(null, tenant);
    });
};
