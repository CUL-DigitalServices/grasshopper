/**
 * Copyright (c) 2014 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var GrassHopper = require('gh-core');

var TenantsAPI = require('gh-tenants');

/**
 * @REST getTenants
 *
 * Get all tenants
 *
 * @Server      admin
 * @Method      GET
 * @Path        /tenants
 * @Return      {Tenant[]}                          All available tenants
 */
GrassHopper.globalAdminServer.on('get', '/api/tenants', function(req, res) {
    TenantsAPI.getTenants(function(err, tenants) {
        if (err) {
            return res.status(err.code).send(err.msg);
        }

        res.status(200).send(tenants);
    });
});

/**
 * @REST getTenant
 *
 * Get a tenant
 *
 * @Server      admin
 * @Method      GET
 * @Path        /tenants/{id}
 * @PathParam   {number}           id               The id of the tenant to retrieve
 * @Return      {Tenant}                            The requested tenant
 */
GrassHopper.globalAdminServer.on('get', '/api/tenants/:id', function(req, res) {
    TenantsAPI.getTenant(req.query.id, function(err, tenant) {
        if (err) {
            return res.status(err.code).send(err.msg);
        }

        res.status(200).send(tenant);
    });
});

/**
 * @REST createTenant
 *
 * Create a new tenant
 *
 * @Server      admin
 * @Method      POST
 * @Path        /tenants
 * @FormParam   {string}            displayName     The name of the tenant
 * @Return      {Tenant}                            The created tenant
 */
GrassHopper.globalAdminServer.on('post', '/api/tenants', function(req, res) {
    TenantsAPI.createTenant(req.body.displayName, function(err, tenant) {
        if (err) {
            return res.status(err.code).send(err.msg);
        }

        res.status(201).send(tenant);
    });
});

/**
 * @REST updateTenant
 *
 * Update a tenant
 *
 * @Server      admin
 * @Method      POST
 * @Path        /tenants/{id}
 * @PathParam   {number}            id              The id of the tenant to update
 * @FormParam   {string}            displayName     Updated tenant name
 * @Return      {Tenant}                            The updated tenant
 */
GrassHopper.globalAdminServer.on('post', '/api/tenants/:id', function(req, res) {
    TenantsAPI.updateTenant(req.params.id, req.body.displayName, function(err, tenant) {
        if (err) {
            return res.status(err.code).send(err.msg);
        }

        res.status(200).send(tenant);
    });
});
