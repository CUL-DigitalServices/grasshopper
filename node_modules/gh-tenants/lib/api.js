/**
 * Copyright (c) 2014 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var log = require('gh-core/lib/logger').logger('gh-tenants');

var TenantsDAO = require('./internal/dao');

/**
 * Get all tenants
 *
 * @param  {Function}       callback            Standard callback function
 * @param  {Object}         callback.err        An error object, if any
 * @param  {Tenants[]}      callback.tenants    All available tenants
 */
var getTenants = module.exports.getTenants = function(callback) {
    // TODO: Check that user is a global administrator

    TenantsDAO.getTenants(callback);
};

/**
 * Get a tenant
 *
 * @param  {Number}         id                  The id of the tenant to retrieve
 * @param  {Function}       callback            Standard callback function
 * @param  {Object}         callback.err        An error object, if any
 * @param  {Tenant}         callback.tenant     The requested tenant
 */
var getTenant = module.exports.getTenant = function(id, callback) {
    // TODO: Check that user is a global administrator
    // TODO: id validation

    TenantsDAO.getTenant(id, callback);
};

/**
 * Create a new tenant
 *
 * @param  {String}         displayName         The name of the tenant
 * @param  {Function}       callback            Standard callback function
 * @param  {Object}         callback.err        An error object, if any
 * @param  {Tenant}         callback.tenant     The created tenant
 */
var createTenant = module.exports.createTenant = function(displayName, callback) {
    // TODO: Check that user is a global administrator
    // TODO: display name validation

    TenantsDAO.createTenant(displayName, callback);
};

/**
 * Update a tenant
 *
 * @param  {Number}         id                  The id of the tenant to update
 * @param  {String}         displayName         Updated tenant name
 * @param  {Function}       callback            Standard callback function
 * @param  {Object}         callback.err        An error object, if any
 * @param  {Tenant}         callback.tenant     The updated tenant
 */
var updateTenant = module.exports.updateTenant = function(id, displayName, callback) {
    // TODO: Check that user is a global administrator
    // TODO: id validation
    // TODO: display name validation

    // Verify that the provided tenant exists
    getTenant(id, function(err, tenant) {
        if (err) {
            return callback(err);
        }

        TenantsDAO.updateTenant(tenant, displayName, callback);
    });
};
