/**
 * Copyright (c) 2015 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var DB = require('gh-core/lib/db');

var AppsDAO = require('./internal/dao');

/**
 * Get an application by its hostname. Before looking up the hostname in the database,
 * the utility will check if the hostname belongs to the global administration or Shibboleth
 * application.
 *
 * @param  {Object}     config              The application configuration as per `config.js`
 * @param  {String}     hostname            The hostname of the application to look up
 * @param  {Function}   callback            Standard callback function
 * @param  {Object}     callback.err        An error object, if any
 * @param  {App}        callback.app        The retrieved application
 */
var getAppByHost = module.exports.getAppByHost = function(config, hostname, callback) {
    if (config.servers.adminHostname === hostname) {
        var globalAdmin = DB.App.build({
            'displayName': 'Global admin server',
            'host': hostname,
            'isGlobalAdmin': true
        });
        return callback(null, globalAdmin);

    } else if (config.servers.shibbolethSPHost === hostname) {
        var shibApp = DB.App.build({
            'displayName': 'Shibboleth application',
            'host': hostname,
            'isGlobalAdmin': false
        });
        return callback(null, shibApp);

    } else {
        return AppsDAO.getAppByHost(hostname, callback);
    }
};
