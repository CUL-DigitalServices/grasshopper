/**
 * Copyright (c) 2014 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

module.exports = function(client) {
    client.app = {};

    /**
     * Get all apps in a tenant
     *
     * @param  {Number}         tenantId                The id of the tenant to retrieve the apps for
     * @param  {Function}       callback                Standard callback function
     * @param  {Object}         callback.err            An error that occurred, if any
     * @param  {Object}         callback.body           The JSON response from the REST API
     * @param  {Response}       callback.response       The response object as returned by requestjs
     * @see gh-apps/lib/rest.js for more information
     */
    client.app.getApps = function(tenantId, callback) {
        client._request('/api/apps', 'GET', {'tenantId': tenantId}, null, callback);
    };

    /**
     * Get an app
     *
     * @param  {Number}         id                      The id of the app to retrieve
     * @param  {Function}       callback                Standard callback function
     * @param  {Object}         callback.err            An error that occurred, if any
     * @param  {Object}         callback.body           The JSON response from the REST API
     * @param  {Response}       callback.response       The response object as returned by requestjs
     * @see gh-apps/lib/rest.js for more information
     */
    client.app.getApp = function(id, callback) {
        var url = '/api/apps/' + client.util.encodeURIComponent(id);
        client._request(url, 'GET', null, null, callback);
    };

    /**
     * Get the administrators for an app
     *
     * @param  {Number}         id                      The id of the app to retrieve the administrators for
     * @param  {Number}         [limit]                 The maximum number of results to retrieve. Default: 10
     * @param  {Number}         [offset]                The paging number of the results to retrieve
     * @param  {Object}         callback.err            An error that occurred, if any
     * @param  {Object}         callback.body           The JSON response from the REST API
     * @param  {Response}       callback.response       The response object as returned by requestjs
     * @see gh-apps/lib/rest.js for more information
     */
    client.app.getAppAdmins = function(id, limit, offset, callback) {
        var url = '/api/apps/' + client.util.encodeURIComponent(id) + '/admins';
        var opts = {
            'limit': limit,
            'offset': offset
        };
        client._request(url, 'GET', opts, null, callback);
    };

    /**
     * Create a new app
     *
     * @param  {Number}         tenantId                The id of the tenant on which to create the app
     * @param  {String}         displayName             The name of the app (e.g. `Timetable 2013-14`)
     * @param  {String}         host                    The host on which the app can be found
     * @param  {String}         type                    The type of the app
     * @param  {Function}       callback                Standard callback function
     * @param  {Object}         callback.err            An error that occurred, if any
     * @param  {Object}         callback.body           The JSON response from the REST API
     * @param  {Response}       callback.response       The response object as returned by requestjs
     * @see gh-apps/lib/rest.js for more information
     */
    client.app.createApp = function(tenantId, displayName, host, type, callback) {
        var app = {
            'displayName': displayName,
            'host': host,
            'tenantId': tenantId,
            'type': type
        };

        client._request('/api/apps', 'POST', app, null, callback);
    };

    /**
     * Update an app
     *
     * @param  {Number}         id                      The id of the app to update
     * @param  {Object}         opts                    The values to update
     * @param  {String}         [opts.displayName]      Updated app name
     * @param  {Boolean}        [opts.enabled]          Whether the app should be enabled
     * @param  {String}         [opts.host]             Updated app host
     * @param  {Function}       callback                Standard callback function
     * @param  {Object}         callback.err            An error that occurred, if any
     * @param  {Object}         callback.body           The JSON response from the REST API
     * @param  {Response}       callback.response       The response object as returned by requestjs
     * @see gh-apps/lib/rest.js for more information
     */
    client.app.updateApp = function(id, opts, callback) {
        var url = '/api/apps/' + client.util.encodeURIComponent(id);
        client._request(url, 'POST', opts, null, callback);
    };

    /**
     * Update the administrators of an app
     *
     * @param  {Number}         id                      The id of the app for which to update the administrators
     * @param  {Object}         adminUpdates            Object that describes the app administrator changes to apply
     * @param  {Function}       callback                Standard callback function
     * @param  {Object}         callback.err            An error that occurred, if any
     * @param  {Object}         callback.body           The JSON response from the REST API
     * @param  {Response}       callback.response       The response object as returned by requestjs
     * @see gh-apps/lib/rest.js for more information
     */
    client.app.updateAppAdmins = function(id, adminUpdates, callback) {
        var url = '/api/apps/' + client.util.encodeURIComponent(id) + '/admins';
        client._request(url, 'POST', adminUpdates, null, callback);
    };

};
