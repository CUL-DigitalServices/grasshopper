/**
 * Copyright (c) 2014 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

module.exports = function(client) {
    client.user = {};

    /**
     * Get the current user
     *
     * @param  {Function}       callback                        Standard callback function
     * @param  {Object}         callback.err                    An error that occurred, if any
     * @param  {Object}         callback.body                   The JSON response from the REST API
     * @param  {Response}       callback.response               The response object as returned by requestjs
     */
    client.user.getMe = function(callback) {
        client._request('/api/me', 'GET', null, null, callback);
    };

    /**
     * Create a user account
     *
     * @param  {String}         username                        The username with which the user will authenticate
     * @param  {String}         password                        The password with which the user will authenticate
     * @param  {String}         displayName                     The display name for the user
     * @param  {String}         email                           The email address for the user
     * @param  {String}         [opts.emailPreference]          The email preference for the user on the apps to which the user is added    [immediate,no]
     * @param  {String}         [opts.recaptchaChallenge]       The identifier for the recaptcha challenge. Only required when the user is not a global or app administrator
     * @param  {String}         [opts.recaptchaResponse]        The recaptcha response entered by the user. Only required when the user is not a global or app administrator
     * @param  {String}         [opts.tenantId]                 The tenant to which the user should be added. This defaults to the tenant of the current app
     * @param  {Function}       callback                        Standard callback function
     * @param  {Object}         callback.err                    An error that occurred, if any
     * @param  {Object}         callback.body                   The JSON response from the REST API
     * @param  {Response}       callback.response               The response object as returned by requestjs
     */
    client.user.create = function(username, password, displayName, email, opts, callback) {
        opts = opts || {};
        var data = {
            'username': username,
            'password': password,
            'displayName': displayName, 
            'email': email,
            'emailPreference': opts.emailPreference,
            'tenantId': opts.tenantId,
            'recaptchaChallenge': opts.recaptchaChallenge,
            'recaptchaResponse': opts.recaptchaResponse
        };
        client._request('/api/users', 'POST', data, null, callback);
    };
};
