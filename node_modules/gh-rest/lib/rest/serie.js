/**
 * Copyright (c) 2014 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

module.exports = function(client) {
    client.serie = {};

    /**
     * Get a serie
     *
     * @param  {Number}         id                              The id of the serie to retrieve
     * @param  {Function}       callback                        Standard callback function
     * @param  {Object}         callback.err                    An error that occurred, if any
     * @param  {Object}         callback.body                   The JSON response from the REST API
     * @param  {Response}       callback.response               The response object as returned by requestjs
     * @see gh-series/lib/rest.js for more information
     */
    client.serie.getSerie = function(id, callback) {
        var url = '/api/series/' + client.util.encodeURIComponent(id);
        client._request(url, 'GET', null, null, callback);
    };

    /**
     * Create a serie
     *
     * @param  {Number}         app                             The id of the application to which this serie will belong
     * @param  {String}         displayName                     The name of the serie
     * @param  {String}         description                     The description of the serie
     * @param  {Number}         group                           The id of the group that can manage the serie
     * @param  {Function}       callback                        Standard callback function
     * @param  {Object}         callback.err                    An error that occurred, if any
     * @param  {Object}         callback.body                   The JSON response from the REST API
     * @param  {Response}       callback.response               The response object as returned by requestjs
     * @see gh-series/lib/rest.js for more information
     */
    client.serie.createSerie = function(displayName, description, group, callback) {
        var data = {
            'app': app,
            'description': description,
            'displayName': displayName,
            'group': group
        };
        client._request('/api/series', 'POST', data, null, callback);
    };

    /**
     * Update a serie
     *
     * @param  {Number}         id                              The id of the serie to update
     * @param  {Object}         update                          The updates to persist
     * @param  {String}         [update.displayName]            The name of the serie
     * @param  {String}         [update.description]            The description of the serie
     * @param  {Number}         [update.group]                  The id of the group that can manage the serie
     * @param  {Function}       callback                        Standard callback function
     * @param  {Object}         callback.err                    An error that occurred, if any
     * @param  {Object}         callback.body                   The JSON response from the REST API
     * @param  {Response}       callback.response               The response object as returned by requestjs
     * @see gh-series/lib/rest.js for more information
     */
    client.serie.updateSerie = function(id, update, callback) {
        update = update || {};
        var url = '/api/series/' + client.util.encodeURIComponent(id);
        var data = {
            'description': update.description,
            'displayName': update.displayName,
            'group': update.group
        };
        client._request(url, 'POST', data, null, callback);
    };

    /**
     * Delete a serie
     *
     * @param  {Number}         id                              The id of the serie to delete
     * @param  {Function}       callback                        Standard callback function
     * @param  {Object}         callback.err                    An error that occurred, if any
     * @param  {Object}         callback.body                   The JSON response from the REST API
     * @param  {Response}       callback.response               The response object as returned by requestjs
     * @see gh-series/lib/rest.js for more information
     */
    client.serie.deleteSerie = function(id, callback) {
        var url = '/api/series/' + client.util.encodeURIComponent(id);
        client._request(url, 'DELETE', null, null, callback);
    };
};
